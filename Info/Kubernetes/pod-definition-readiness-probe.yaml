apiVersion: v1
kind: Pod
metadata:
  name: simple-webapp-color
spec:
  containers: # A list, because a POD can have multiple containers
    - name: simple-webapp-color
      image: simple-webapp-color
      ports:
        - containerPort: 8080
      readinessProbe:
        httpGet:
          path: /api/ready
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 5
        failureThreshold: 8 # By default is 3
      
      ## Other options for readinessProbe
      ##  TCP
      readinessProbe:
        tcpSocket:
          port: 3306

      ## Exec Command
      readinessProbe:
        Command:
          - cat 
          - /app/is_ready



# Under metadata you must input whatever kubernetes is expected
# Under labels you can input any value that you want

# kubectl run ngnix --image nginx
# kubectl create -f pod-definition.yaml
# kubectl apply -f pod-definition.yaml
# kubectl get pods
# kubectl get pods -o wide # it gives you additional info, Node that is being used
# kubectl describe pod nginx # It gives you more details
# kubectl delete pod
# kubectl delete -f ./pod.json